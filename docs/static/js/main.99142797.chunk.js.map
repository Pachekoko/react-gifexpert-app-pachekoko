{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAmCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAcrC,OACI,mCACI,sBAAMC,SAVK,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAwBO,OACtCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBQ,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,e,QCIhBG,EAVK,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAE3B,OACI,sBAAKC,UAAU,wCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACXN,EADW,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEXS,EAFW,gBAGGA,EAAKC,OAHR,uBAGVC,EAHU,EAGVA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFhB,GAAGgB,EAAIhB,GACPC,MAAMe,EAAIf,MACVC,IAAG,UAACc,EAAIC,cAAL,aAAC,EAAYC,iBAAiBhB,QARxB,kBAWVY,GAXU,4CAAD,sDC8BLK,EA3BM,SAAEZ,GAAe,IAAD,EAEPrB,mBAAS,CAC/B2B,KAAK,GACLO,SAAQ,IAJqB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAwBjC,OAhBAC,qBAAW,WAEPjB,EAASC,GACJiB,MAAK,SAAAC,GAEFH,EAAS,CACLT,KAAKY,EACLL,SAAQ,SAKtB,CAACb,IAIIc,GCAIK,EAvBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,EAEEY,EAAaZ,GAA/BU,EAFgB,EAErBJ,KAAYO,EAFS,EAETA,QAGnB,OACI,qCACI,oBAAIjB,UAAU,0CAAd,SAAyDI,IACxDa,GAAW,mBAAGjB,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aCctB2B,EA3BM,WAAM,IAAD,EAEazC,mBAAS,CAAC,mBAFvB,mBAEf0C,EAFe,KAEJ3C,EAFI,KAMtB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ2C,EAAWb,KAAI,SAAAR,GAAQ,OACf,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MChBrCsB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.99142797.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>0){\r\n            setCategories((categ)=>[inputValue,...categ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                    \r\n                />\r\n            </form>\r\n            \r\n        </>\r\n    );\r\n}\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired,\r\n};\r\nexport default AddCategory;\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n    /* console.log(id,title,url); */\r\n    return (\r\n        <div className=\"card animate__animated animate__jello\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","export const getGifs=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=TozWj5Xo4uxO3FQkkjzewRY4zDO3xc8C`;\r\n    const resp=await fetch(url);\r\n    const {data}= await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import { useState,useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nconst useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n                \r\n            });\r\n            \r\n    },[category]);\r\n\r\n    \r\n    \r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs\r\n","import GifGridItem from './GifGridItem'; \r\n\r\nimport useFetchGifs from \"../hooks/useFetchGifs\"\r\n\r\nconst GifGrid = ({category}) => {\r\n    \r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounceInLeft\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img)=>(\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () =>{\r\n    \r\n    const [categories,setCategories] = useState(['Adventure Time']);\r\n    /* const handleAdd=(newCateg)=>{\r\n        setCategories((categ)=>['nuevaCategoria',...categ]);\r\n    } */\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category=>\r\n                            <GifGrid\r\n                                key={category}\r\n                                category={category}\r\n                            />\r\n                    )\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    );\r\n}\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}